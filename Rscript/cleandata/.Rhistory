read.csv('Values.csv')
values = read.csv('Values.csv')
View(values)
owner = read.csv('Owner_Address.csv')
View(values)
View(owner)
print(i)
for (i in 1:nrow(pricevalues)) {
row <- pricevalues[i, ]
print(row)
}
View(values)
pricevalues = read.csv('Values.csv')
for (i in 1:nrow(values)) {
row <- values[i, ]
print(row)
}
View(values)
values = read.csv('Values.csv')
for (i in 1:nrow(values)) {
row <- values[i, 0]
print(row)
}
values = read.csv('Values.csv')
for (i in 1:nrow(values)) {
row <- values[i, 1]
print(row)
}
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
headers1 = rownames(values)
headers2 = rownames(owner)
common_headers = intersect(headers1, headers2)
new_table <- data.frame(RowHeader = common_headers)
print(new_table)
headers1 = rownames(values)
headers2 = rownames(owner)
common_headers = intersect(headers1, headers2)
new_table = data.frame(RowHeader = common_headers)
View(new_table)
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
headers1 = rownames(values)
headers2 = rownames(owner)
common_headers = intersect(headers1, headers2)
new_table = data.frame(common_headers)
View(new_table)
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
headers1 = values[,1]
headers2 = owner[,1]
common_headers = intersect(headers1, headers2)
new_table = data.frame(Row_Header = common_headers)
print(new_table)
View(new_table)
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
meme = [];
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
meme = c();
print(new_table)
for (i in 1:nrow(owner)) {
for(j in 1: nrow(values)) {
if((owner[i, 2]) == values[j, 1]) {
meme.push(owner[i,2] + values[j,1])
}
}
}
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
meme = c();
print(new_table)
for (i in 1:nrow(owner)) {
for(j in 1: nrow(values)) {
if((owner[i, 2]) == values[j, 1]) {
meme = append(meme, (owner[i,2] + values[j,1]))
break
}
}
}
break
print((owner[i,2] + values[j,1]))
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
meme = c();
print(new_table)
for (i in 1:nrow(owner)) {
for(j in 1: nrow(values)) {
if((owner[i, 2]) == values[j, 1]) {
print((owner[i,2] + values[j,1]))
break
}
}
}
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
meme = c();
print(new_table)
for (i in 1:nrow(owner)) {
for(j in 1: nrow(values)) {
if((owner[i, 2]) == values[j, 1]) {
print((owner[i,2], values[j,1]))
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
meme = c();
print(new_table)
for (i in 1:nrow(owner)) {
for(j in 1: nrow(values)) {
if((owner[i, 2]) == values[j, 1]) {
print('success')
break
}
}
}
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
meme = c();
print(new_table)
for (i in 1:nrow(owner)) {
for(j in 1: nrow(values)) {
if((owner[i, 2]) == values[j, 1]) {
print('success')
print(owner[i,2])
print(values[j,1])
break
}
}
}
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
print(colnames(owner))
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
meme = data.frame(intersect(colnames(meme), colnames(value)))
View(meme)
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
meme = data.frame(intersect(colnames(meme), colnames(value)))
View(meme)
View(new_table)
View(meme)
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
values = cbind(values, price)
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
values = cbind(values, 'price')
print(colnames(values))
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
owner = cbind(owner, 'price')
print(colnames(values))
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
owner = cbind(owner, 'price')
print(colnames(owner))
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
owner = cbind(owner, 'landprice')
owner = cbind(owner, 'buildingprice')
print(colnames(owner))
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
owner = cbind(owner, 'landprice')
owner = cbind(owner, 'buildingprice')
print(colnames(owner))
print(colnames(values))
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
owner = cbind(owner, 'landprice')
owner = cbind(owner, 'buildingprice')
print(colnames(owner))
print(colnames(values))
for (i in 1:nrow(owner)) {
for(j in 1: nrow(values)) {
if((owner[i, 2]) == values[j, 1]) {
print('success')
print(owner[i,2])
print(values[j,1])
owner[i,35] = values[j,4]
owner[i,36] = values[j,3]
break
}
}
}
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
owner = cbind(owner, 'landprice')
owner = cbind(owner, 'buildingprice')
View(owner)
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
owner = cbind(owner, 'landprice')
owner = cbind(owner, 'buildingprice')
print(colnames(owner))
print(colnames(values))
for (i in 1:nrow(owner)) {
for(j in 1: nrow(values)) {
if((owner[i, 2]) == values[j, 1]) {
print('success')
print(owner[i,2])
print(values[j,1])
owner[i,35] = values[j,4]
owner[i,36] = values[j,3]
break
}
}
}
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
owner = cbind(owner, 'landprice')
owner = cbind(owner, 'buildingprice')
print(colnames(owner))
print(colnames(values))
for (i in 1:nrow(owner)) {
for(j in 1: nrow(values)) {
if((owner[i, 2]) == values[j, 1]) {
print('success')
print(owner[i,2])
print(values[j,1])
owner[i,35] = values[j,4]
owner[i,36] = values[j,3]
break
}
}
}
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
owner = cbind(owner, 'landprice')
owner = cbind(owner, 'buildingprice')
print(colnames(owner))
print(colnames(values))
for (i in 1:nrow(owner)) {
for(j in 1: nrow(values)) {
if((owner[i, 2]) == values[j, 1]) {
print('success')
print(owner[i,2])
print(values[j,1])
owner[i,35] = values[j,4]
owner[i,36] = values[j,3]
values = values[-j,]
break
}
}
}
View(values)
values = read.csv('Values.csv')
owner = read.csv('Owner_Address.csv')
owner = cbind(owner, 'landprice')
owner = cbind(owner, 'buildingprice')
print(colnames(owner))
print(colnames(values))
for (i in 1:nrow(owner)) {
for(j in 1: nrow(values)) {
if((owner[i, 2]) == values[j, 1]) {
print('success')
print(owner[i,2])
print(values[j,1])
owner[i,35] = values[j,4]
owner[i,36] = values[j,3]
values = values[-j,]
break
}
}
}
View(values)
View(values)
View(owner)
View(owner)
View(owner)
View(pricevalues)
owner2 = owner
write.csv(owner2, 'output.csv')
View(new_table)
View(owner2)
owner2 = subset(owner2, select= -c(Created Date))
owner2 = subset(owner2, select= -c(CreatedDate))
owner2 = subset(owner2, select = -c(str_num, str_pfx, str, str_sfx, str_unit))
owner2 = subset(owner2, select = -c(waterFee))
Longmont = owner2[which(owner2$city == 'LONGMONT'), ]
View(Longmont)
write.csv(Longmont, 'longmont.csv')
colnames(Longmont)
Longmontfix = Longmont
colnames(LongmontFix)[29] = buildingprice
colnames(LongmontFix)[29] = 'buildingprice'
colnames(Longmontfix)[29] = "buildingprice"
colnames(Longmontfix)
colnames(Longmontfix)[28] = 'landprice'
colnames(Longmontfix)
write.csv(Longmontfix, Longmont.csv)
write.csv(Longmontfix, 'Longmont.csv')
View(owner)
longmontadress = owner[which(owner$city == 'Longmont'), ]
View(Longmontfix)
View(Longmontfix)
View(longmontadress)
longmontadress = owner[which(owner$city) == 'LONGMONT'),]
longmontadress = owner[which(owner$city == 'LONGMONT'),]
longmontadress = cbind(longmontadress, 'f-address')
colnames(longmontadress)
colnames(longmontadress)[35] = 'landprice'
colnames(longmontadress)[36] = 'buildingprice'
colnames(longmontadress)[37] = 'f-address'
longmonttest = longmontadress
i <- 1
while (i <= nrow(longmonttest)) {
# Access the current row using df[i, ]
# Perform your desired operations on the current row
# Example: Print the values of each column in the current row
print(df[i, ])
i <- i + 1
}
longmonttest = longmontadress
i <- 1
while (i <= nrow(longmonttest)) {
# Access the current row using df[i, ]
# Perform your desired operations on the current row
# Example: Print the values of each column in the current row
print(longmonttest[i, ])
i <- i + 1
}
View(Longmont)
View(longmontadress)
View(Longmontfix)
View(longmonttest)
longmonttest = longmontadress
i <- 1
while (i <= nrow(longmonttest)) {
# Access the current row using df[i, ]
# Perform your desired operations on the current row
# Example: Print the values of each column in the current row
longmonttest[i, 'f-address'] = 6
i <- i + 1
}
View(longmonttest)
longmonttest = longmontadress
i <- 1
while (i <= nrow(longmonttest)) {
# Access the current row using df[i, ]
# Perform your desired operations on the current row
# Example: Print the values of each column in the current row
longmonttest[i, 'f-address'] = longmonttest[i, 'str_num'] + longmonttest[i, 'str_pfx'] + longmonttest[i, 'str'] + longmonttest[i, 'str_sfx']
i <- i + 1
print(longmont[i, 'f-address'])
}
longmonttest = longmontadress
i <- 1
while (i <= nrow(longmonttest)) {
# Access the current row using df[i, ]
# Perform your desired operations on the current row
# Example: Print the values of each column in the current row
longmonttest[i, 'f-address'] = paste(longmonttest[i, 'str_num'], longmonttest[i, 'str_pfx'], longmonttest[i, 'str'], longmonttest[i, 'str_sfx'])
i <- i + 1
print(longmont[i, 'f-address'])
}
longmonttest = longmontadress
i <- 1
while (i <= nrow(longmonttest)) {
# Access the current row using df[i, ]
# Perform your desired operations on the current row
# Example: Print the values of each column in the current row
longmonttest[i, 'f-address'] = paste(longmonttest[i, 'str_num'], longmonttest[i, 'str_pfx'], longmonttest[i, 'str'], longmonttest[i, 'str_sfx'])
i <- i + 1
print(longmonttest[i, 'f-address'])
}
longmonttest = longmontadress
i <- 1
while (i <= nrow(longmonttest)) {
# Access the current row using df[i, ]
# Perform your desired operations on the current row
# Example: Print the values of each column in the current row
longmonttest[i, 'f-address'] = paste(longmonttest[i, 'str_num'], longmonttest[i, 'str_pfx'], longmonttest[i, 'str'], longmonttest[i, 'str_sfx'])
print(longmonttest[i, 'f-address'])
i <- i + 1
}
i <- 1
while (i <= nrow(longmonttest)) {
library(stringr)
# Function to replace multiple spaces with one space
remove_extra_spaces <- function(input_string) {
# Use regular expression to find multiple spaces and replace with a single space
cleaned_string <- str_replace_all(input_string, "\\s+", " ")
return(cleaned_string)
}
longmonttest[i, 'f-address'] = remove_extra_spaces(longmonttest[i, 'f-address'])
i <- i + 1
}
longmontfinal = longmonttest[, -c(6,7,8,9)]
View(longmonttest)
View(Longmontfix)
View(longmontfinal)
write.csv(longmontfinal, 'Longmont.csv')
View(owner2)
